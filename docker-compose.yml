version: '3.8'

services:
  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    container_name: smartmedia-backend
    restart: unless-stopped
    depends_on:
      - postgres
    # 生产环境使用命名卷持久化数据（由 Docker 管理）
    volumes:
      - ./app_datas:/app/app_datas
      # 注意：将整仓库绑定到容器根目录（./:/app:ro）会导致在只读 bind-mount 上创建子挂载点失败
      # 如果你需要在开发时热加载代码，可把下面这一行取消注释并调整为非只读（/:/app:rw），或改为把代码挂到其它路径
      # - ./:/app:ro
    ports:
      - "${BACKEND_PORT:-9999}:8000"
    environment:
      - PORT=8000
      - POSTGRES_HOST=${POSTGRES_HOST:-postgres}
      - POSTGRES_PORT=${POSTGRES_PORT:-5432}
      - POSTGRES_USER=${POSTGRES_USER:-smartmedia}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-smartmedia_pass}
      - POSTGRES_DB=${POSTGRES_DB:-smartmedia}
      - MS_MODEL_CACHE=/app/app_datas/model_cache
      - TORCH_HOME=/app/app_datas/torch_cache
      - HF_HOME=/app/app_datas/transformers_cache
      - XDG_CACHE_HOME=/app/app_datas/xdg_cache
      - BACKEND_PORT=${BACKEND_PORT:-9999}
      - FRONTEND_HOST=${FRONTEND_HOST:-localhost}
      - FRONTEND_PORT=${FRONTEND_PORT:-10000}
    deploy: {}
    gpus: all

  frontend:
    build:
      context: .
      dockerfile: frontend/Dockerfile
    container_name: smartmedia-frontend
    restart: unless-stopped
    ports:
      - "${FRONTEND_PORT:-10000}:80"
    environment:
      - PORT=80
      - BACKEND_HOST=${BACKEND_HOST:-backend}
      - BACKEND_PORT=${BACKEND_PORT:-8000}
      - USE_DOCKER=1



  postgres:
    image: postgres:17
    container_name: smartmedia-postgres
    restart: unless-stopped
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    environment:
      - POSTGRES_USER=${POSTGRES_USER:-smartmedia}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-smartmedia_pass}
      - POSTGRES_DB=${POSTGRES_DB:-smartmedia}
    volumes:
      - ./app_datas/postgres:/var/lib/postgresql/data




